<html>
<head>
<title>Search On The Map</title>
</head>
<body>											
<label >Find Your City *</label>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBr2yewFufTglumcDwgokOOZS2rLfKDZhA&callback=initMap&libraries=places"></script>
<input id="searchInput" type="text" value="" style="color:black; width:250px" placeholder="Search For City ...">
<br><br>
<div class="map" id="map" style="border: 1px solid #ccc; border-radius: 4px; color:#000; width: 40%; height: 380px;"></div>
<br>
<div class="form_area">
Address: <input type="text" name="Address" value="" id="location">
Latitude: <input type="text" name="Latitude" value="" id="lat">
Longitude: <input type="text" name="Longitude" value="" id="lng">
</div>
<script>
function initialize() {
   var latlng = new google.maps.LatLng(31.9742203,35.913764);
    var map = new google.maps.Map(document.getElementById('map'), {
      center: latlng,
      zoom: 13,
 zoomControl: true,
  mapTypeControl: false,
  scaleControl: false,
  streetViewControl: false,
  rotateControl: true,
  fullscreenControl: true
    });
    var marker = new google.maps.Marker({
      map: map,
      position: latlng,
      draggable: true,
      anchorPoint: new google.maps.Point(0, -29)
   });
    var input = document.getElementById('searchInput');
    //map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);
    var geocoder = new google.maps.Geocoder();
    var autocomplete = new google.maps.places.Autocomplete(input);
    autocomplete.bindTo('bounds', map);
    var infowindow = new google.maps.InfoWindow();   
    autocomplete.addListener('place_changed', function() {
        infowindow.close();
        marker.setVisible(false);
        var place = autocomplete.getPlace();
        if (!place.geometry) {
            window.alert("Autocomplete's returned place contains no geometry");
            return;
        }
          if (place.geometry.viewport) {
            map.fitBounds(place.geometry.viewport);
        } else {
            map.setCenter(place.geometry.location);
            map.setZoom(17);
        }
       
        marker.setPosition(place.geometry.location);
        marker.setVisible(true);          
    
        bindDataToForm(place.formatted_address,place.geometry.location.lat(),place.geometry.location.lng());
        infowindow.setContent(place.formatted_address);
        infowindow.open(map, marker);
       
    });
    google.maps.event.addListener(marker, 'dragend', function() {
        geocoder.geocode({'latLng': marker.getPosition()}, function(results, status) {
        if (status == google.maps.GeocoderStatus.OK) {
          if (results[0]) {        
              bindDataToForm(results[0].formatted_address,marker.getPosition().lat(),marker.getPosition().lng());
              infowindow.setContent(results[0].formatted_address);
              infowindow.open(map, marker);
          }
        }
        });
    });
}
function bindDataToForm(address,lat,lng){
   document.getElementById('location').value = address;
   document.getElementById('lat').value = lat;
   document.getElementById('lng').value = lng;
}
google.maps.event.addDomListener(window, 'load', initialize);
</script>
</body>
</html>
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
							
								